@using He.PipelineAssessment.UI.Features.Workflow.ViewModels
@model He.PipelineAssessment.UI.Features.Workflow.ViewModels.Question
@{
    var itemName = "Data.Questions[" + Model.Index + "].Text";
    var answerName = "Data.Questions[" + Model.Index + "].Answers[0]";
    var errorFormClass = !Model.IsValid ? "govuk-form-group--error" : "";
    var errorFieldClass = !Model.IsValid ? "govuk-input--error" : "";
    var isReadOnly = Model.IsReadOnly ? "disabled" : "";
    var questionTextModel = new QuestionText() { Text = Model.QuestionText, ReevaluatePrepopulatedAnswers = Model.ReevaluatePrePopulatedAnswers, IsReadOnly = Model.IsReadOnly};

}

<div class="govuk-form-group @errorFormClass">
    @await Html.PartialAsync("_QuestionTitle", Model.Title)
    @await Html.PartialAsync("_QuestionText", questionTextModel)
    @await Html.PartialAsync("_QuestionHint", Model.QuestionHint)

    <div class="govuk-input__wrapper">
        <textarea id="@answerName" name="@itemName" class="govuk-textarea govuk-textarea--width-6 @errorFieldClass" rows="5" maxlength="@Model.CharacterLimit" @isReadOnly>@Model.Text</textarea>
    </div>

    @await Html.PartialAsync("_QuestionGuidance", Model.QuestionGuidance)

    @await Html.PartialAsync("_Comments", new Comment(){Index = Model.Index, CommentText = Model.Comments,DisplayComments = Model.DisplayComments})
</div>