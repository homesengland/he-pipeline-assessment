@model He.PipelineAssessment.UI.Features.Workflow.SaveAndContinue.SaveAndContinueCommand

@if (!Model.IsValid)
{
    @await Html.PartialAsync("_ValidationSummary",Model.ValidationMessages)
}
<div class="govuk-form-group">
    <h1 class="govuk-heading-l">
        @Html.DisplayTextFor(m => m.Data.QuestionActivityData!.Title)
    </h1>
    <label class="govuk-label govuk-label--m">
        @Html.DisplayTextFor(m => m.Data.QuestionActivityData!.Question)
    </label>
    @if (!string.IsNullOrEmpty(Model.Data.QuestionActivityData!.QuestionHint))
    {
        <div id="event-name-hint" class="govuk-hint">
            @Model.Data.QuestionActivityData.QuestionHint
        </div>
    }

    <div class="govuk-date-input__item">
        <div class="govuk-form-group">
            <label class="govuk-label govuk-date-input__label" for="date-day">
                Day
            </label>
            @Html.TextBoxFor(m => Model.Data.QuestionActivityData.Date.Day, new {@class = "govuk-input govuk-date-input__input govuk-input--width-2", @name="date-day", @type = "number", @inputmode="numeric"})
        </div>
    </div>
    <div class="govuk-date-input__item">
        <div class="govuk-form-group">
            <label class="govuk-label govuk-date-input__label" for="date-month">
                Month
            </label>
            @Html.TextBoxFor(m => Model.Data.QuestionActivityData.Date.Month, new {@class = "govuk-input govuk-date-input__input govuk-input--width-2", @name="date-month", @type = "number", @inputmode="numeric"})
        </div>
    </div>
    <div class="govuk-date-input__item">
        <div class="govuk-form-group">
            <label class="govuk-label govuk-date-input__label" for="date-year">
                Year
            </label>
            @Html.TextBoxFor(m => Model.Data.QuestionActivityData.Date.Year, new {@class = "govuk-input govuk-date-input__input govuk-input--width-3", @name="date-year", @type = "number", @inputmode="numeric"})
        </div>
    </div>

    <br />


    @if (!string.IsNullOrEmpty(Model.Data.QuestionActivityData.QuestionGuidance))
    {
        <br />
        <details class="govuk-details" data-module="govuk-details">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                    Question guidance
                </span>
            </summary>
            <div class="govuk-details__text">
                @Model.Data.QuestionActivityData.QuestionGuidance
            </div>
        </details>
    }
    @if (Model.Data.QuestionActivityData.DisplayComments)
    {
        @await Html.PartialAsync("_Comments", Model.Data.QuestionActivityData.Comments)
    }
    <br />

    <input id="Next" type="submit" value="Save and continue" name="Next" class="govuk-button" />

</div>