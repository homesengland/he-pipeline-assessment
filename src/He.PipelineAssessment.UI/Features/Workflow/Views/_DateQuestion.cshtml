@using He.PipelineAssessment.UI.Features.Workflow.ViewModels
@using Elsa.CustomWorkflow.Sdk.Providers;
@model He.PipelineAssessment.UI.Features.Workflow.ViewModels.Question
@{
    var itemDayName = ValidationPropertyNameProvider.GetPropertyName(Model.QuestionType, Model.Index) + ".Day";
    var itemMonthName = ValidationPropertyNameProvider.GetPropertyName(Model.QuestionType, Model.Index) + ".Month";
    var itemYearName = ValidationPropertyNameProvider.GetPropertyName(Model.QuestionType, Model.Index) + ".Year";
    var formItemName = ValidationPropertyNameProvider.GetPropertyName(Model.QuestionType, Model.Index);

    var errorFormClass = !Model.IsValid ? "govuk-form-group--error" : "";
    var errorFieldClass = !Model.IsValid ? "govuk-input--error" : "";
    var label = "Label-" + Model.QuestionText.Replace(" ", "");
    var questionTextModel = new QuestionText() { Text = Model.QuestionText, ReevaluatePrepopulatedAnswers = Model.ReevaluatePrePopulatedAnswers, IsReadOnly=Model.IsReadOnly, Label=label};
}

<div class="govuk-form-group @errorFormClass" id="@formItemName">
    @await Html.PartialAsync("_QuestionText", questionTextModel)
    @await Html.PartialAsync("_QuestionHint", Model)
    <div class="govuk-date-input__item">
        <div class="govuk-form-group">
            @{
                var labelDayId = questionTextModel.Text.Replace(" ", "") + "Day";
                <label id=@labelDayId class="govuk-label govuk-date-input__label" for="date-day">
                    Day
                </label>
                <input id="@itemDayName" name="@itemDayName" class="govuk-input govuk-date-input__input govuk-input--width-2 @errorFieldClass" type="number" inputmode="numeric" value="@Model.Date!.Day" aria-labelledby=@labelDayId />
            }
        </div>
    </div>
    <div class="govuk-date-input__item">
        <div class="govuk-form-group">
            @{
                var labelMonthId = questionTextModel.Text.Replace(" ", "") + "Month";
                <label id=@labelMonthId class=" govuk-label govuk-date-input__label" for="date-month">
                     Month
                </label>
                <input id="@itemMonthName" name="@itemMonthName" class="govuk-input govuk-date-input__input govuk-input--width-2 @errorFieldClass" type="number" inputmode="numeric" value="@Model.Date!.Month" aria-labelledby=@labelMonthId />
            }
        </div>
    </div>
    <div class="govuk-date-input__item">
        <div class="govuk-form-group">
                        @{
            var labelYearId = questionTextModel.Text.Replace(" ", "") + "Year";
             <label id=@labelYearId class="govuk-label govuk-date-input__label" for="date-year">
                Year
            </label>
                    <input id="@itemYearName" name="@itemYearName" class="govuk-input govuk-date-input__input govuk-input--width-3 @errorFieldClass" type="number" inputmode="numeric" value="@Model.Date!.Year" aria-labelledby=@labelYearId />
            }
        </div>
    </div>
    @if (Model.EnhancedGuidance != null && Model.EnhancedGuidance.Any())
    {
        @await Html.PartialAsync("_EnhancedGuidance", Model)
    }
    else
    {
        @await Html.PartialAsync("_QuestionGuidance", Model.QuestionGuidance)
    }
    @await Html.PartialAsync("_Comments", new Comment(){Index = Model.Index, CommentText = Model.Comments,DisplayComments = Model.DisplayComments})
    @await Html.PartialAsync("_Evidence", new Evidence(){Index = Model.Index, DocumentLink = Model.DocumentEvidenceLink ,DisplayEvidenceBox = Model.DisplayEvidenceBox})
</div>