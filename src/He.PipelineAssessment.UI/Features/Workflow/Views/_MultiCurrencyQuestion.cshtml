@using He.PipelineAssessment.UI.Features.Workflow.ViewModels
@model He.PipelineAssessment.UI.Features.Workflow.ViewModels.MultiQuestion
@{
    var itemName = "Data.MultiQuestionActivityData[" + Model.Index + "].Decimal";
}

<div class="govuk-form-group">
    <h1 class="govuk-heading-l">
        @Html.DisplayTextFor(m => m.Title)
    </h1>
    <label class="govuk-label govuk-label--m">
        @Html.DisplayTextFor(m => m.Question)
    </label>
    @if (!string.IsNullOrEmpty(Model.QuestionHint))
    {
        <div id="event-name-hint" class="govuk-hint">
            @Model.QuestionHint
        </div>
    }
    
    <div class="govuk-input__wrapper">
        <div class="govuk-input__prefix" aria-hidden="true">£</div>
       
        <input type="text" name="@itemName" class="govuk-input govuk-input--width-5" value="@Model.Decimal" />
    </div>

 
    @if (!string.IsNullOrEmpty(Model.QuestionGuidance))
    {
        <br />
        <details class="govuk-details" data-module="govuk-details">
            <summary class="govuk-details__summary">
                <span class="govuk-details__summary-text">
                    Question guidance
                </span>
            </summary>
            <div class="govuk-details__text">
                @Model.QuestionGuidance
            </div>
        </details>
    }
    @if (Model.DisplayComments)
    {
        @await Html.PartialAsync("_MultiComments", new MultiComment(){Index = Model.Index, Comment = Model.Comments})
    }
</div>