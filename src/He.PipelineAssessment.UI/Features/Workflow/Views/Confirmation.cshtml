@model He.PipelineAssessment.UI.Features.Workflow.LoadConfirmationScreen.LoadConfirmationScreenResponse;
@using He.PipelineAssessment.UI.Features.Workflow.ViewModels
@{
    ViewData["Title"] = "Pipeline Assessment";
    Layout = "_Layout";
}

<div class="govuk-panel govuk-panel--confirmation">
    <h1 class="govuk-panel__title">
        @Model.Data.ConfirmationTitle
    </h1>
    <div class="govuk-panel__body">
        @Model.Data.ConfirmationText
    </div>
</div>
<div>
    <h2 class="govuk-heading-m">@Html.DisplayTextFor(m => m.Data.FooterTitle)</h2>
    <p class="govuk-body">@Html.DisplayTextFor(m => m.Data.FooterText)</p>

    @foreach (var text in Model.Data.Text.InformationTextList.
    Select(x => new InformationText
    {
        Text = x.Text,
       IsHyperlink = x.IsHyperlink,
       IsGuidance = x.IsGuidance,
        IsParagraph = x.IsParagraph,
        Url = x.Url
    }).ToList())
    {
        @await Html.PartialAsync("_InformationTextWrapper", text);
    }
</div>

<h2 class="govuk-heading-m">
    Review your answers
</h2>
@await Html.PartialAsync("_ReviewAnswers",new ReviewAnswers{Questions = Model.Data.CheckQuestions, RenderChangeLinks = false})

<div>
    @Html.ActionLink("Go to Assessment Summary", "Summary", "Assessment", new { Model.AssessmentId, Model.CorrelationId }, new { @class = "govuk-button" })
</div>

@await Html.PartialAsync("_InterventionOptions.cshtml", Model.Data.WorkflowInstanceId)
