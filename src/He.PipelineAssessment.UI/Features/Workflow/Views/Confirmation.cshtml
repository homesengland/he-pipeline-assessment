@model He.PipelineAssessment.UI.Features.Workflow.LoadConfirmationScreen.LoadConfirmationScreenResponse;
@using He.PipelineAssessment.UI.Features.Workflow.ViewModels
@{
    ViewData["Title"] = "Pipeline Assessment";
    Layout = "_Layout";
}
<span class="govuk-caption-l">@Model.Reference</span>
<h2 class="govuk-heading-m">@Model.SiteName</h2>
<div class="govuk-panel govuk-panel--confirmation">
    <h1 class="govuk-panel__title">
        @Model.Data.ConfirmationTitle
    </h1>
    <div class="govuk-panel__body">
        @Model.Data.ConfirmationText
    </div>
</div>
<div>
    <h2 class="govuk-heading-m">@Html.DisplayTextFor(m => m.Data.FooterTitle)</h2>
    <p class="govuk-body">@Html.DisplayTextFor(m => m.Data.FooterText)</p>

    @await Html.PartialAsync("_Information",new Question()
    {
    Index = 1,
    Information = Model.Data.Text.Select(x => new Information{
    Title = x.Title,
    IsBullet = x.IsBullets,
    IsGuidance = x.IsGuidance,
    IsCollapsed = x.IsCollapsed,
    Text = x.InformationTextList.Select(y => new InformationText {
        Text = y.Text,
        IsHyperlink = y.IsHyperlink,
        IsParagraph = y.IsParagraph,
        Url = y.Url,
        IsBold = y.IsBold
        }).ToList()
    }).ToList()
    })
</div>

<h2 class="govuk-heading-m">
    Review your answers
</h2>
@await Html.PartialAsync("_ReviewAnswers",new ReviewAnswers{Questions = Model.Data.CheckQuestions, RenderChangeLinks = false})

<div>
    @Html.ActionLink("Exit to Assessment Summary", "Summary", "Assessment", new { Model.AssessmentId, Model.CorrelationId }, new { @class = "govuk-button govuk-button--secondary" })
</div>

@if (Model.IsLatestSubmittedWorkflow)
{
    @await Html.PartialAsync("_InterventionOptions.cshtml", Model.Data.WorkflowInstanceId)
}
