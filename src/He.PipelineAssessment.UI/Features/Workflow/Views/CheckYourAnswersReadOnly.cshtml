@model QuestionScreenSaveAndContinueCommand;
@using He.PipelineAssessment.UI
@using Elsa.CustomWorkflow.Sdk
@using He.PipelineAssessment.UI.Features.Workflow.QuestionScreenSaveAndContinue
@using System.Text.Json
@{
    ViewData["Title"] = "Pipeline Assessment";
    Layout = "_Layout";
}
<div class="govuk-form-group">
    <h1 class="govuk-heading-l">
        @Html.DisplayTextFor(m => m.Data.PageTitle)
    </h1>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                @foreach (var question in Model.Data.CheckQuestionScreenAnswers!)
                {

                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @question.Question
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @if (question.QuestionType == QuestionTypeConstants.CheckboxQuestion)
                            {
                                if (question.Answer != null)
                                {
                                    var answerList = JsonSerializer.Deserialize<List<string>>(question.Answer);

                                    if (answerList != null)
                                    {
                                        var result = string.Join(", ", answerList);
                                        @result
                                    }
                                }
                            }
                            else
                            {
                                @question.Answer
                            }
                        </dd>

                    </div>

                }
            </dl>
        </div>
    </div>

    <br />
    <div>
        <h2 class="govuk-heading-m">@Html.DisplayTextFor(m => m.Data.FooterTitle)</h2>
        <p class="govuk-body">@Html.DisplayTextFor(m => m.Data.FooterText).</p>
    </div>
    @{
        @Html.ActionLink("Go to Assessment Summary", "Summary", "Assessment", new { Model.AssessmentId, Model.CorrelationId }, new { @class = "govuk-button" })
     }
</div>
