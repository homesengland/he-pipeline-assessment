@using He.PipelineAssessment.UI.Features.Workflow.ViewModels
@using He.PipelineAssessment.UI.Helper
@using Elsa.CustomWorkflow.Sdk
@model He.PipelineAssessment.UI.Features.Workflow.ViewModels.Question


@{
    var formItemName = "Data.Questions[" + Model.Index + "].DataTable";
    var errorFormClass = !Model.IsValid ? "govuk-form-group--error" : "";
    //var errorFieldClass = !Model.IsValid ? "govuk-input--error" : "";
    var isReadOnly = Model.IsReadOnly ? "disabled" : "";
}


<div class="govuk-form-group @errorFormClass" id="@formItemName">

    @{
        var dataTable = Model.DataTable;

    }

    @for (int i = 0; i < Model.DataTable.Count(); i++)
    {
        var hiddenInputType = "Data.Questions[" + Model.DataTable[i].QuestionIndex + "].DataTable.InputType";
        var hiddenGroupingId = "Data.Questions[" + Model.DataTable[i].QuestionIndex + "].DataTable.DisplayGroupId";

        <input type="hidden" name="@hiddenInputType" value="@Model.DataTable[i].InputType" />
        <input type="hidden" name="@hiddenGroupingId" value="@Model.DataTable[i].DisplayGroupId" />
    }

    @{
        DataTable largestDataTable = Model.DataTable.OrderByDescending(x => x.Inputs.Count()).FirstOrDefault()!;
    }

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds-from-desktop">
            <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">

                    </dt>
                    @for (int q = 0; q < Model.DataTable.Count(); q++)
                    {
                        var inputItemName = "Data.Questions[" + Model.DataTable[q].QuestionIndex + "].DataTable.Inputs";
                        <dt class="govuk-summary-list__key" id="@inputItemName">
                            @Model.DataTable[q].QuestionText
                        </dt>
                    }
                </div>

                @for (int i = 0; i < largestDataTable.Inputs.Count(); i++)
                {
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @largestDataTable.Inputs[i].InputHeading
                        </dt>
                        @for (int q = 0; q < Model.DataTable.Count(); q++)
                        
                        {
                            int countOfColumnIndex = Model.DataTable[q].Inputs.Count();
                            if (i < countOfColumnIndex)
                            {
                                var inputs = "Data.Questions[" + Model.DataTable[q].QuestionIndex + "].DataTable.Inputs";
                                var itemId = inputs + "[" + i + "]";
                                var itemName = itemId + ".Input";
                                var hiddenTitleName = itemId + ".Title";
                                var hiddenIdentifierName = itemId + ".Identifier";

                                <input type="hidden" name="@hiddenTitleName" value="@Model.DataTable[q].Inputs[i].InputHeading" />
                                <input type="hidden" name="@hiddenIdentifierName" value="@Model.DataTable[q].Inputs[i].Identifier" />

                                var input = Model.DataTable[q].Inputs.ElementAtOrDefault(i);
                                bool hasNullInput = input == null;
                                var inputValue = hasNullInput ? "" : Model.DataTable[q].Inputs[i].Input;
                                var disableInput = Model.DataTable[q].Inputs[i].IsReadOnly? "disabled":"";
                                string dataFlagIsSummary = Model.DataTable[q].Inputs[i].IsSummaryTotal ? "true" : "false";
                                string dataColumn =  Model.DataTable[q].DisplayGroupId+"_"+q.ToString();
                                string questionNotAnswered = Model.ValidationMessages != null && Model.ValidationMessages.Errors.Any(x => x.PropertyName == @inputs) ? "govuk-input--error" : "";
                                string errorFieldClass = Model.ValidationMessages != null && Model.ValidationMessages.Errors.Any(x => x.PropertyName == @itemId) ? "govuk-input--error" : "";
                                <dd class="govuk-summary-list__value">
                                    <div class="govuk-input__wrapper">
                                        @if (Model.DataTable[q].InputType == DataTableInputTypeConstants.CurrencyDataTableInput)
                                        {
                                            var success = Decimal.TryParse(inputValue, out decimal tempCurrencyInputDecimal);
                                            decimal? currencyInputDecimal = success ? tempCurrencyInputDecimal: null;
                                            var currencyInputValue = success ? currencyInputDecimal.ToCommaSeparatedNumber() : inputValue;
                                            <div class="govuk-input__prefix" aria-hidden="true">£</div>
                                            <input id="@itemId"
                                            type="text"
                                            name="@itemName"
                                            class="govuk-input govuk-input--width-5 @errorFieldClass @questionNotAnswered"
                                            @disableInput
                                            data-summary=@dataFlagIsSummary
                                            data-column=@dataColumn
                                            value="@currencyInputValue" 
                                            currency-formatter="true" />
                                        }
                                        @if (Model.DataTable[q].InputType == DataTableInputTypeConstants.DecimalDataTableInput)
                                        {
                                            <input id="@itemName"
                                            type="number"
                                            step="any"
                                            name="@itemName"
                                            class="govuk-input govuk-input--width-5 @errorFieldClass @questionNotAnswered"
                                            @disableInput
                                            data-summary=@dataFlagIsSummary
                                            data-column=@dataColumn
                                            value="@inputValue" />
                                        }  
                                        @if (Model.DataTable[q].InputType == DataTableInputTypeConstants.IntegerDataTableInput)
                                        {
                                            <input id="@itemName"
                                            type="number"
                                            name="@itemName"
                                            class="govuk-input govuk-input--width-5 @errorFieldClass @questionNotAnswered"
                                            @disableInput
                                            data-summary=@dataFlagIsSummary
                                            data-column=@dataColumn
                                            value="@inputValue" />
                                        } 
                                        @if (Model.DataTable[q].InputType == DataTableInputTypeConstants.TextDataTableInput)
                                        {
                                            <input id="@itemId"
                                            type="text"
                                            name="@itemName"
                                            class="govuk-input govuk-input--width-5 @errorFieldClass @questionNotAnswered"
                                            @disableInput
                                            value="@inputValue" />
                                        }                                       
                                    </div>
                                </dd>
                            }
                            else
                            {
                                <dd class="govuk-summary-list__value">
                                    <div class="govuk-input__wrapper">
                                    </div>
                                </dd>
                            }
                        }
                    </div>
                }
            </dl>
        </div>
    </div>

</div>