@using He.PipelineAssessment.UI.Features.Workflow.ViewModels
@model He.PipelineAssessment.UI.Features.Workflow.ViewModels.Information
@{
    bool hasTitle = !string.IsNullOrEmpty(Model.Title);
}

@if(Model.IsGuidance){
    <div class="govuk-inset-text">
        if(hasTitle)
        {
        <h2 class="govuk-heading-m">Model.Title</h2>
        }
        @foreach(var text in Model.Text)
        {
            @await Html.PartialAsync("_InformationTextElement", text)
        }
    </div>
}
else if(Model.IsBullet){
    if(hasTitle)
    {
        <h2 class="govuk-heading-m">Model.Title</h2>
    }
    <ul>
        @foreach(var text in Model.Text)
        {
            <li>
                @await Html.PartialAsync("_InformationTextElement", text)
            </li>
        }

    </ul>
}
else if(Model.IsCollapsed) {
    <details class="govuk-details" data-module="govuk-details">
        <summary class="govuk-details__summary">
            <span class="govuk-details__summary-text">
                if (hasTitle)
                {
                @Model.Title
                }
                else{
                    Click to expand
                }
            </span>
        </summary>
        <div class="govuk-details__text">
            if (hasTitle)
            {
            <h2 class="govuk-heading-m">Model.Title</h2>
            }
            @foreach (var text in Model.Text)
            {
                @await Html.PartialAsync("_InformationTextElement", text)
            }
        </div>
    </details>
}
else
{
    if (hasTitle)
    {
        <h2 class="govuk-heading-m">Model.Title</h2>
    }
    @foreach(var text in Model.Text)
    {
        @await Html.PartialAsync("_InformationTextElement", text)
    }
}