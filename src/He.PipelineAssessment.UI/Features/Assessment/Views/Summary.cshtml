@using He.PipelineAssessment.UI
@using He.PipelineAssessment.UI.Authorization;
@using System.Security.Claims;
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model He.PipelineAssessment.UI.Features.Assessment.AssessmentSummary.AssessmentSummaryResponse;

@{
    ViewData["Title"] = "Assessment Summary";
    Layout = "_Layout";
}

@Html.ActionLink("Back","Index","Assessment", null,new{ @class="govuk-back-link"})
<span class="govuk-caption-l">@Model.Reference</span>
<h1 class="govuk-heading-l">@Model.SiteName</h1>

<p class="govuk-body">@Model.LocalAuthority</p>
<p class="govuk-body">@Model.CounterParty</p>
<p class="govuk-body">@Model.ProjectManager</p>

<div class="text-center">
    <div class="text-center">
        <table class="govuk-table">
            <caption class="govuk-table__caption govuk-table__caption--m">Assessment Summary</caption>
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Stage</th>
                    <th scope="col" class="govuk-table__header">Status</th>
                    <th scope="col" class="govuk-table__header">Last Updated</th>
                    <th scope="col" class="govuk-table__header">Date Submitted</th>
                    <th scope="col" class="govuk-table__header">Submitted By</th>
                    <th scope="col" class="govuk-table__header">Result</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @foreach (var assessmentStage in Model.Stages)
                {
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell">
                            @if (assessmentStage.AssessmentToolWorkflowInstanceId != null)
                            {
                                @if ((await AuthorizationService.AuthorizeAsync(User, Constants.AuthorizationPolicies.AssignmentToWorkflowExecuteRoleRequired)).Succeeded)
                                {

                                    @Html.ActionLink(assessmentStage.Name, "LoadWorkflowActivity", "Workflow", new { WorkflowInstanceId = assessmentStage.WorkflowInstanceId, ActivityId = assessmentStage.CurrentActivityId, ActivityType = assessmentStage.CurrentActivityType })

                                }
                                else
                                {
                                    @Html.ActionLink(assessmentStage.Name, "LoadReadOnlyWorkflowActivity", "Workflow", new { WorkflowInstanceId = assessmentStage.WorkflowInstanceId, ActivityId = assessmentStage.CurrentActivityId, ActivityType = assessmentStage.CurrentActivityType })

                                }
                            }
                            else
                            {
                                @assessmentStage.Name
                            }
                        </td>

                        <td class="govuk-table__cell">
                            <strong class="govuk-tag govuk-tag--@assessmentStage.StatusDisplayTag()">
                                @if (string.IsNullOrEmpty(assessmentStage.Status))
                                {
                                    if (string.IsNullOrEmpty(assessmentStage.WorkflowDefinitionId))
                                    {
                                        @:Cannot Start
                                    }
                                    else
                                    {
                                        @:Start Stage
                                    }
                                }
                                else
                                {
                                    @assessmentStage.Status
                                }
                            </strong>
                        </td>
                        <td class="govuk-table__cell">
                            @if (@assessmentStage.SubmittedDateTime.HasValue)
                            {
                                @assessmentStage.SubmittedDateTime.Value.Date.ToLongDateString()
                            }

                        <td class="govuk-table__cell">
                                @if (@assessmentStage.CreatedDateTime.HasValue)
                                {
                                    @assessmentStage.CreatedDateTime.Value.Date.ToLongDateString()
                                }
                                else
                                {

                                    if ((await AuthorizationService.AuthorizeAsync(User, Constants.AuthorizationPolicies.AssignmentToWorkflowExecuteRoleRequired)).Succeeded)
                                    {
                                        if (!string.IsNullOrEmpty(assessmentStage.WorkflowDefinitionId))
                                        {
                                            @using (Html.BeginForm("StartWorkflow", "Workflow", FormMethod.Post))
                                            {
                                                @Html.AntiForgeryToken()
                                                @Html.HiddenFor(x => x.AssessmentId)
                                                @Html.HiddenFor(x => x.CorrelationId)
                                            <input type="hidden" name="WorkflowDefinitionId" value="@assessmentStage.WorkflowDefinitionId" />
                                            <input class="govuk-button govuk-!-margin-0" data-module="govuk-button" id="Submit" type="submit" value="Start now" />
                                            }
                                        }
                                    }
                                }
                        </td>
                        <td class="govuk-table__cell">
                                @assessmentStage.SubmittedBy
                        </td>
                        <td class="govuk-table__cell">
                                @assessmentStage.Result
                        </td>
                        <td class="govuk-table__cell"> </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

