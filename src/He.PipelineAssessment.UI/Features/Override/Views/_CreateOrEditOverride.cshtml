@model He.PipelineAssessment.UI.Features.Intervention.AssessmentInterventionDto;

@{
    var signoffDocumentErrorClass = "";
    var adminRationaleErrorClass = "";
    var workflowDefinitionClass = "govuk-select";
    if (Model.ValidationResult != null)
    {
        var signoffDocumentInvalid = Model.ValidationResult.Errors.Any(x => x.PropertyName == "SignOffDocument");
        var adminRationaleInvalid = Model.ValidationResult.Errors.Any(x => x.PropertyName == "AdministratorRationale");
        var workflowDefinitionInvalid = Model.ValidationResult.Errors.Any(x => x.PropertyName == "TargetWorkflowId");
        signoffDocumentErrorClass = signoffDocumentInvalid ? "govuk-input--error" : "";
        adminRationaleErrorClass = adminRationaleInvalid ? "govuk-input--error" : "";
        workflowDefinitionClass = workflowDefinitionInvalid ? "govuk-select govuk-select--error" : "govuk-select";
    }
}

<fieldset class="govuk-fieldset" aria-describedby="waste-hint">
    <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
        <span class="govuk-caption-l">@Model.AssessmentInterventionCommand.ProjectReference</span>
        <h1 class="govuk-heading-l">
            Decision for @Model.AssessmentInterventionCommand.DecisionType
        </h1>
    </legend>

    <dl class="govuk-summary-list govuk-summary-list--no-border">
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                Decision Type
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.AssessmentInterventionCommand.DecisionType
            </dd>
        </div>
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                Name
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.AssessmentInterventionCommand.RequestedBy
            </dd>
        </div>
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                Assessment Stage
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.AssessmentInterventionCommand.AssessmentName
            </dd>
        </div>
        <div class="govuk-summary-list__row">
            <dt class="govuk-summary-list__key">
                Result
            </dt>
            <dd class="govuk-summary-list__value">
                @Model.AssessmentInterventionCommand.AssessmentResult
            </dd>
        </div>
    </dl>

    <div class="govuk-form-group">
        <h1 class="govuk-label-wrapper">
            <label class="govuk-label govuk-label--m" for="SignOffDocument">
                Provide Link to Sign Off Document
            </label>
        </h1>
        <input class="govuk-input @signoffDocumentErrorClass" id="SignOffDocument" name="AssessmentInterventionCommand.SignOffDocument" value="@Model.AssessmentInterventionCommand.SignOffDocument" type="text">
    </div>

    <div class="govuk-form-group">
        <h1 class="govuk-label-wrapper">
            <label class="govuk-label govuk-label--m" for="AdministratorRationale">
                Rationale
            </label>
        </h1>
        <textarea class="govuk-textarea @adminRationaleErrorClass" id="AdministratorRationale" name="AssessmentInterventionCommand.AdministratorRationale" rows="5" aria-describedby="AdministratorRationale">@Model.AssessmentInterventionCommand.AdministratorRationale</textarea>
    </div>
    <div class="govuk-form-group">
        <label class="govuk-label" for="TargetWorkflowId">
            Target workflow definition
        </label>
        <div id="subject-hint" class="govuk-hint">
            This is the workflow definition, which will be available to start after this intervention request has been approved. All workflows created after workflow represented by the selected choice (if any) will be deleted.
        </div>
        @Html.DropDownListFor(x =>
        Model.AssessmentInterventionCommand.TargetWorkflowId,
        new SelectList(Model.TargetWorkflowDefinitions, "Id", "DisplayName"),
        "Choose target workflow definition", new { @class = @workflowDefinitionClass, id = "TargetWorkflowId" })
    </div>
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.AssessmentInterventionId)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.AssessmentToolWorkflowInstanceId)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.WorkflowInstanceId)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.AssessmentResult)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.AssessmentName)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.AssessorRationale)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.RequestedBy)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.RequestedByEmail)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.Administrator)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.AdministratorEmail)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.DecisionType)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.Status)
    @Html.HiddenFor(x => Model.AssessmentInterventionCommand.ProjectReference)
    @for (int i = 0; i < Model.TargetWorkflowDefinitions!.Count; i++)
    {
        @Html.HiddenFor(model => Model.TargetWorkflowDefinitions[i].Id)
        @Html.HiddenFor(model => Model.TargetWorkflowDefinitions[i].Name)
        @Html.HiddenFor(model => Model.TargetWorkflowDefinitions[i].WorkflowDefinitionId)
        @Html.HiddenFor(model => Model.TargetWorkflowDefinitions[i].DisplayName)
    }
</fieldset>