@    using He.PipelineAssessment.UI.Features.Admin.AssessmentToolManagement.Commands.CreateAssessmentTool
@model AssessmentToolListData;

@{
    ViewData["Title"] = "Assessment Tools";
    Layout = "_Layout";
}

<div class="text-center">
    <div class="text-center">
        <table class="govuk-table">
            <caption class="govuk-table__caption govuk-table__caption--m">Assessment Tools</caption>
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header">Name</th>
                    <th scope="col" class="govuk-table__header">Order</th>
                    <th scope="col" class="govuk-table__header">Assessment Tool Workflows</th>
                    <th scope="col" class="govuk-table__header">Update</th>
                    <th scope="col" class="govuk-table__header">Delete</th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @foreach (var assessmentTool in Model.AssessmentTools)
                {
                    <tr class="govuk-table__row">
                        @using (Html.BeginForm("UpdateAssessmentTool", "Admin", FormMethod.Post))
                        {
                            <td class="govuk-table__cell">
                                @Html.TextBox("name", assessmentTool.Name, "", new { @class = "govuk-input" })
                            </td>
                            <td class="govuk-table__cell">
                                @Html.TextBox("order", assessmentTool.Order, "", new { @class = "govuk-input" })
                            </td>
                            <td class="govuk-table__cell">
                                @Html.AntiForgeryToken()
                                @Html.Hidden("id", assessmentTool.Id)
                                <input class="govuk-button govuk-!-margin-0" data-module="govuk-button" id="Update" type="submit" value="Update"/>
                            </td>
                        }
                        <td class="govuk-table__cell">
                            @using (Html.BeginForm("DeleteAssessmentTool", "Admin", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.Hidden("assessmentToolId", assessmentTool.Id)
                                <input class="govuk-button govuk-!-margin-0" data-module="govuk-button" id="Delete" type="submit" value="Delete"/>
                            }
                        </td>
                        <td class="govuk-table__cell">
                            <table class="govuk-table" style="margin-bottom: 0">
                                <tbody class="govuk-table__body">
                                @foreach (var assessmentToolWorkflow in assessmentTool.AssessmentToolWorkFlows)
                                {
                                    <tr class="govuk-table__row">
                                        <td class="govuk-table__cell">
                                            @assessmentToolWorkflow.WorkflowDefinitionId
                                        </td>
                                        <td class="govuk-table__cell">
                                            @if(assessmentToolWorkflow.IsFirstWorkflow)
                                            {
                                                @:First workflow
                                            }
                                        </td>
                                    </tr>
                                }
                            </table>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @using (Html.BeginForm("CreateAssessmentTool", "Admin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            var createAssessmentToolCommand = new CreateAssessmentToolCommand()
                {
                    Order = Model.AssessmentTools.Max(x => x.Order) + 1
                };

            <div class="govuk-form-group">
                <h3 class="govuk-label-wrapper">                   
                 @Html.LabelFor(m => createAssessmentToolCommand.Name ,new {@class="govuk-label govuk-label--s"} )              
              </h3>
                @Html.TextBoxFor(m => createAssessmentToolCommand.Name, new {@class="govuk-input"})
            </div>

            
          <div class="govuk-form-group">
                <h3 class="govuk-label-wrapper">                   
                 @Html.LabelFor(m => createAssessmentToolCommand.Order ,new {@class="govuk-label govuk-label--s"} )              
              </h3>
                @Html.TextBoxFor(m => createAssessmentToolCommand.Order, new {@class="govuk-input"})
            </div>

            @Html.ValidationMessageFor(m => createAssessmentToolCommand.Name)
            @Html.ValidationMessageFor(m => createAssessmentToolCommand.Order)          
          
     
            <input class="govuk-button" data-module="govuk-button" id="Submit" type="submit" value="Create AssessmentTool" />
        }
    </div>
</div>