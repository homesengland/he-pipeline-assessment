/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { CheckboxQuestion, IQuestionComponent, RadioQuestion } from "./models/custom-component-models";
import { ActivityDefinitionProperty, ActivityModel, ActivityPropertyDescriptor } from "./models/elsa-interfaces";
export namespace Components {
    interface ElsaCheckboxQuestion {
        "question": CheckboxQuestion;
    }
    interface ElsaMultichoiceRecordsProperty {
        "activityModel": ActivityModel;
        "propertyDescriptor": ActivityPropertyDescriptor;
        "propertyModel": ActivityDefinitionProperty;
    }
    interface ElsaQuestion {
        "question": IQuestionComponent;
    }
    interface ElsaQuestionScreen {
        "activityModel": ActivityModel;
        "propertyDescriptor": ActivityPropertyDescriptor;
        "propertyModel": ActivityDefinitionProperty;
    }
    interface ElsaRadioQuestion {
        "question": RadioQuestion;
    }
    interface ElsaSinglechoiceRecordsProperty {
        "activityModel": ActivityModel;
        "propertyDescriptor": ActivityPropertyDescriptor;
        "propertyModel": ActivityDefinitionProperty;
    }
}
declare global {
    interface HTMLElsaCheckboxQuestionElement extends Components.ElsaCheckboxQuestion, HTMLStencilElement {
    }
    var HTMLElsaCheckboxQuestionElement: {
        prototype: HTMLElsaCheckboxQuestionElement;
        new (): HTMLElsaCheckboxQuestionElement;
    };
    interface HTMLElsaMultichoiceRecordsPropertyElement extends Components.ElsaMultichoiceRecordsProperty, HTMLStencilElement {
    }
    var HTMLElsaMultichoiceRecordsPropertyElement: {
        prototype: HTMLElsaMultichoiceRecordsPropertyElement;
        new (): HTMLElsaMultichoiceRecordsPropertyElement;
    };
    interface HTMLElsaQuestionElement extends Components.ElsaQuestion, HTMLStencilElement {
    }
    var HTMLElsaQuestionElement: {
        prototype: HTMLElsaQuestionElement;
        new (): HTMLElsaQuestionElement;
    };
    interface HTMLElsaQuestionScreenElement extends Components.ElsaQuestionScreen, HTMLStencilElement {
    }
    var HTMLElsaQuestionScreenElement: {
        prototype: HTMLElsaQuestionScreenElement;
        new (): HTMLElsaQuestionScreenElement;
    };
    interface HTMLElsaRadioQuestionElement extends Components.ElsaRadioQuestion, HTMLStencilElement {
    }
    var HTMLElsaRadioQuestionElement: {
        prototype: HTMLElsaRadioQuestionElement;
        new (): HTMLElsaRadioQuestionElement;
    };
    interface HTMLElsaSinglechoiceRecordsPropertyElement extends Components.ElsaSinglechoiceRecordsProperty, HTMLStencilElement {
    }
    var HTMLElsaSinglechoiceRecordsPropertyElement: {
        prototype: HTMLElsaSinglechoiceRecordsPropertyElement;
        new (): HTMLElsaSinglechoiceRecordsPropertyElement;
    };
    interface HTMLElementTagNameMap {
        "elsa-checkbox-question": HTMLElsaCheckboxQuestionElement;
        "elsa-multichoice-records-property": HTMLElsaMultichoiceRecordsPropertyElement;
        "elsa-question": HTMLElsaQuestionElement;
        "elsa-question-screen": HTMLElsaQuestionScreenElement;
        "elsa-radio-question": HTMLElsaRadioQuestionElement;
        "elsa-singlechoice-records-property": HTMLElsaSinglechoiceRecordsPropertyElement;
    }
}
declare namespace LocalJSX {
    interface ElsaCheckboxQuestion {
        "onUpdateQuestion"?: (event: CustomEvent<IQuestionComponent>) => void;
        "question"?: CheckboxQuestion;
    }
    interface ElsaMultichoiceRecordsProperty {
        "activityModel"?: ActivityModel;
        "propertyDescriptor"?: ActivityPropertyDescriptor;
        "propertyModel"?: ActivityDefinitionProperty;
    }
    interface ElsaQuestion {
        "onUpdateQuestion"?: (event: CustomEvent<IQuestionComponent>) => void;
        "question"?: IQuestionComponent;
    }
    interface ElsaQuestionScreen {
        "activityModel"?: ActivityModel;
        "propertyDescriptor"?: ActivityPropertyDescriptor;
        "propertyModel"?: ActivityDefinitionProperty;
    }
    interface ElsaRadioQuestion {
        "onUpdateQuestion"?: (event: CustomEvent<IQuestionComponent>) => void;
        "question"?: RadioQuestion;
    }
    interface ElsaSinglechoiceRecordsProperty {
        "activityModel"?: ActivityModel;
        "propertyDescriptor"?: ActivityPropertyDescriptor;
        "propertyModel"?: ActivityDefinitionProperty;
    }
    interface IntrinsicElements {
        "elsa-checkbox-question": ElsaCheckboxQuestion;
        "elsa-multichoice-records-property": ElsaMultichoiceRecordsProperty;
        "elsa-question": ElsaQuestion;
        "elsa-question-screen": ElsaQuestionScreen;
        "elsa-radio-question": ElsaRadioQuestion;
        "elsa-singlechoice-records-property": ElsaSinglechoiceRecordsProperty;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "elsa-checkbox-question": LocalJSX.ElsaCheckboxQuestion & JSXBase.HTMLAttributes<HTMLElsaCheckboxQuestionElement>;
            "elsa-multichoice-records-property": LocalJSX.ElsaMultichoiceRecordsProperty & JSXBase.HTMLAttributes<HTMLElsaMultichoiceRecordsPropertyElement>;
            "elsa-question": LocalJSX.ElsaQuestion & JSXBase.HTMLAttributes<HTMLElsaQuestionElement>;
            "elsa-question-screen": LocalJSX.ElsaQuestionScreen & JSXBase.HTMLAttributes<HTMLElsaQuestionScreenElement>;
            "elsa-radio-question": LocalJSX.ElsaRadioQuestion & JSXBase.HTMLAttributes<HTMLElsaRadioQuestionElement>;
            "elsa-singlechoice-records-property": LocalJSX.ElsaSinglechoiceRecordsProperty & JSXBase.HTMLAttributes<HTMLElsaSinglechoiceRecordsPropertyElement>;
        }
    }
}
